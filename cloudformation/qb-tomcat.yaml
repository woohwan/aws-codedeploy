AWSTemplateFormatVersion: 2010-09-09
Parameters:

# Imports
  vpcId:
    Type: AWS::EC2::VPC::Id
    Default: vpc-435bcc28
  
  # ap-northeast-2a
  SubnetA:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet for tomcat 
    Default: subnet-a720a1cc

  

  myKeyPair:
    Description: 'use for EC2 instance' 
    Type: AWS::EC2::KeyPair::KeyName
    Default: aws-ec2

  BucketName:
    Type: String
    Default: steve-codedeploy-bucket

  AMI:
    Description: 'AMI of EC2'
    Type: AWS::EC2::Image::Id
    Default: ami-0fd0765afb77bcca7
  
  CodeDeployInstanceProfileName:
    Description: EC2 Instance Profile for CodeDeploy
    Type: String
    Default: CodeDeployDemo-EC2-Instance-Profile

  Environment:
    Description: 'dev, prod'
    Type: String
    Default: 'dev'



Resources:

  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: 'launch-template-sg'
      GroupDescription: >-
        Enable HTTP accrss via port 8080 & port 22 
      VpcId: !Ref vpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8009
          ToPort: 8009
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: "Name"
          Value: 'launch-template-sg'

# Launch template for the tomcat app servers & supporting config files
  QuaterbackLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateName: 'Launch-Template-Tomcat9'
      LaunchTemplateData:
        NetworkInterfaces:
          - DeviceIndex: 0
            AssociatePublicIpAddress: true
            DeleteOnTermination: true
            SubnetId: !Ref SubnetA
            Groups:
              - !Ref AppSecurityGroup
        ImageId: !Ref AMI
        IamInstanceProfile: 
          Name: !Ref CodeDeployInstanceProfileName
        InstanceType: t3.medium
        KeyName: !Ref myKeyPair
        
        TagSpecifications:
        - ResourceType: instance
          Tags:
          - Key: Name
            Value: quarterback tomcat
        UserData: 
          Fn::Base64: !Sub |
            #!/bin/bash
            sudo yum update -y
            cd /home/ec2-user
            # install jdk 15
            sudo rpm --import https://yum.corretto.aws/corretto.key 
            sudo curl -L -o /etc/yum.repos.d/corretto.repo https://yum.corretto.aws/corretto.repo
            sudo yum install -y java-15-amazon-corretto-devel
            sudo aws s3api get-object --bucket ${BucketName} --key ${Environment}/config/tomcat.service /etc/systemd/system/tomcat.service
            useradd -d /opt/tomcat -s /bin/nologin tomcat
            # tommcat install
            sudo aws s3api get-object --bucket ${BucketName} --key ${Environment}/lib/apache-tomcat-9.0.0.M26.tar.gz /tmp/apache-tomcat-9.0.0.M26.tar.gz
            tar -zxvf /tmp/apache-tomcat-*.tar.gz
            mkdir -p /opt/tomcat
            mv apache-tomcat-9.0.0.M26/* /opt/tomcat
            
            chown -R tomcat:tomcat /opt/tomcat
            sudo systemctl daemon-reload
            sudo systemctl start tomcat
            sudo systemctl enable tomcat
            cd /home/ec2-user
            sudo aws s3api get-object --bucket ${BucketName} --key ${Environment}/lib/mysql-connector-java-8.0.28.jar /opt/tomcat/lib/mysql-connector-java-8.0.28.jar
            sudo aws s3api get-object --bucket ${BucketName} --key ${Environment}/config/server.xml /opt/tomcat/conf/server.xml
            sudo aws s3api get-object --bucket ${BucketName} --key ${Environment}/config/context.xml /opt/tomcat/conf/context.xml
            sudo chown tomcat:tomcat /opt/tomcat/lib/mysql-connector-java-8.0.28.jar
            sudo systemctl restart tomcat
  # TomcatInstance:
  #   Type: AWS::EC2::Instance
  #   Properties:
  #     LaunchTemplate:
  #       LaunchTemplateId: !Ref QuaterbackLaunchTemplate
  #       Version: !GetAtt QuaterbackLaunchTemplate.LatestVersionNumber





