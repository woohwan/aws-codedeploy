AWSTemplateFormatVersion: 2010-09-09
Parameters:

  vpcId:
    Type: AWS::EC2::VPC::Id
    Default: vpc-08e429b53dcd87621

  # qb-subnet-public1-ap-northeast-2a
  SubnetA:
    Type: AWS::EC2::Subnet::Id
    Description: public subnet for httpd
    Default: subnet-009c61a90b1dd402d
  
  myKeyPair:
    Description: 'use for EC2 instance' 
    Type: AWS::EC2::KeyPair::KeyName
    Default: 'aws-ec2'

  BucketName:
    Type: String
    Default: steve-codedeploy-bucket

  AMI:
    Description: 'AMI of EC2'
    Type: AWS::EC2::Image::Id
    Default: ami-0fd0765afb77bcca7
  
  HttpdSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security group for httpd
    Default: sg-03f70df752e61b3f8
  
  InstanceProfileName:
    Description: EC2 instance Porilfe access to S3
    Type: String
    Default: EC2InstanceProfileS3
  
  Env:
    Description: 'dev, prod'
    Type: String
    Default: dev

Resources:

# Launch template for the tomcat app servers & supporting config files
  HttpdLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateName: 'cf-Launch-Template-HTTPD'
      LaunchTemplateData:
        NetworkInterfaces:
          - DeviceIndex: 0
            AssociatePublicIpAddress: true
            DeleteOnTermination: true
            SubnetId: !Ref SubnetA
            Groups:
              - !Ref HttpdSecurityGroup
        ImageId: !Ref AMI
        # Instance Profile Name
        IamInstanceProfile: 
          Arn: !Sub arn:aws:iam::${AWS::AccountId}:instance-profile/${InstanceProfileName}
        InstanceType: t3.medium
        KeyName: !Ref myKeyPair
        TagSpecifications:
        - ResourceType: instance
          Tags:
          - Key: Name
            Value: HTTPD
        UserData: 
          Fn::Base64: !Sub |
            #!/bin/bash
            yum update -y
            yum install -y httpd-2.4.53 httpd-devel-2.4.53
            yum install -y mod_ssl-2.4.53 autoconf libtools
            cd /home/ec2-user
            
            # modify kuernel setting
            aws s3api get-object --bucket ${BucketName} --key ${Env}/config/qb/sysctl.conf sysctl.conf
            cp sysctl.conf /etc/sysctl.conf
            sysctl -p

            # install and configure mod_jk
            aws s3api get-object --bucket ${BucketName} --key ${Env}/lib/qb/mod_jk.so /etc/httpd/modules/mod_jk.so
            chmod 755 /etc/httpd/modules/mod_jk.so
            aws s3api get-object  --bucket ${BucketName} --key ${Env}/config/qb/httpd-jk.conf /etc/httpd/conf.modules.d/httpd-jk.conf
            aws s3api get-object  --bucket ${BucketName} --key ${Env}/config/qb/uriworkermap.properties /etc/httpd/conf.d/uriworkermap.properties
            aws s3api get-object  --bucket ${BucketName} --key ${Env}/config/qb/workers.properties /etc/httpd/conf.d/workers.properties

            # configure mpm event module
            aws s3api get-object  --bucket ${BucketName} --key ${Env}/config/qb/00-mpm.conf /etc/httpd/conf.modules.d/00-mpm.conf

            # configure virutal host
            aws s3api get-object  --bucket ${BucketName} --key ${Env}/config/qb/vhost.conf /etc/httpd/conf.d/vhost.conf

            systemctl start httpd
            systemctl enable httpd

            
  # HttpdInstance:
  #   Type: AWS::EC2::Instance
  #   Properties:
  #     LaunchTemplate:
  #       LaunchTemplateId: !Ref HttpdLaunchTemplate
  #       Version: !GetAtt HttpdLaunchTemplate.LatestVersionNumber





